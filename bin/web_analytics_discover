#!/usr/bin/env ruby

require 'fileutils'
require 'uri'
require 'optparse'

require 'web_analytics_discovery'
include WebAnalyticsDiscovery

class AnalyticsGrabber
	def initialize
		@services = {}
		SERVICES.each_pair { |name, klass|
			begin
				@services[name] = klass.new
			rescue Exception => ex
				warn "Unable to start analytics service #{name}"
				$stderr.puts ex.message
				$stderr.puts ex.backtrace.join("\n")
			end
		}
	end

	def run(url)
		r = {}
		@services.each_pair { |name, service|
			begin
				r[name] = service.run(url)
			rescue Exception => ex
				warn "Exception querying analytics service #{name}"
				$stderr.puts ex.message
				$stderr.puts ex.backtrace.join("\n")
			end
		}
		r
	end

	def pp(url)
		r = run(url)
		print_line ['', 'id', 'v/day', 's/day', 'pv/day', 'v/mon', 's/mon', 'pv/mon']
		r.keys.sort.each { |service|
			res = r[service]
			next unless res
			print_line [
				service,
				res[:id],
				res[:visitors_day],
				res[:visits_day],
				res[:pv_day],
				res[:visitors_mon],
				res[:visits_mon],
				res[:pv_mon],
			]
		}
	end

	def print_line(a)
		printf '%-20s', a.shift
		printf '|%24s', a.shift
		a.each { |x|
			printf '|%11s', x || 'N/A'
		}
		puts
	end
end

options = {}
OptionParser.new { |opts|
	opts.banner = "Usage: #{__FILE__} [options] <urls>"

#	opts.on('-v', '--[no-]verbose', 'Verbose logging') { |v| options[:verbose] = v }

	opts.on_tail('-h', '--help', 'Show this message') { puts opts; exit }
}.parse!

ag = AnalyticsGrabber.new
ARGV.each { |a| ag.pp(a) }
